import{_ as l,c as a,a as i,o as s}from"./app-DThUmfZl.js";const r={};function n(t,e){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="es6" tabindex="-1"><a class="header-anchor" href="#es6"><span>ES6</span></a></h1><h2 id="_1、箭头函数" tabindex="-1"><a class="header-anchor" href="#_1、箭头函数"><span>1、箭头函数</span></a></h2><ul><li><p>this 总是指向函数定义生效时所在的对象</p></li><li><p>不适用场景</p><ul><li><p>定义对象的方法，且该方法里调用 this</p></li><li><p>需要动态“this”的时候，也不应该使用箭头函数</p></li></ul></li></ul><h2 id="_2、proxy" tabindex="-1"><a class="header-anchor" href="#_2、proxy"><span>2、Proxy</span></a></h2><ul><li>在目标对象之前加一层拦截，可以对外界的访问进行过滤和改写。实际上重载了点运算符，即用自己的定义覆盖了语言的原始定义</li></ul><h2 id="_3、reflect" tabindex="-1"><a class="header-anchor" href="#_3、reflect"><span>3、Reflect</span></a></h2><h2 id="_4、class" tabindex="-1"><a class="header-anchor" href="#_4、class"><span>4、class</span></a></h2><ul><li><p>继承 extends</p><ul><li><p>super 作为函数</p><ul><li><p>super() 调用父类的构造函数，新建父类的实例对象</p></li><li><p>子类实例的构建，必须先完成父类的继承，super()让子类实例继承父类</p></li><li><p>执行 super()时，子类的属性和方法还没绑定到 this 上，所以存在同名的属性，拿到的是父类的属性</p></li></ul></li><li><p>super 作为对象，普通方法指向父类的原型对象；静态方法指向父类</p></li></ul></li></ul><h2 id="_5、promise-对象" tabindex="-1"><a class="header-anchor" href="#_5、promise-对象"><span>5、Promise 对象</span></a></h2><ul><li><p>异步编程的解决方案</p></li><li><p>特点</p><ul><li><p>对象的状态不受外界的干扰，有三种状态：Pending(进行中)、fulfilled(已成功)、rejected(已失败)</p></li><li><p>一旦状态改变，就不会再变，任何时候都可以得到该结果</p></li></ul></li></ul><h2 id="_6、generator" tabindex="-1"><a class="header-anchor" href="#_6、generator"><span>6、Generator</span></a></h2><ul><li><p>状态机，返回遍历器对象，一个指向内部状态的指针对象</p></li><li><p>调用遍历器的 next 方法，使指针指向下一个状态</p></li></ul><h2 id="_7、async-await" tabindex="-1"><a class="header-anchor" href="#_7、async-await"><span>7、async/await</span></a></h2><ul><li><p>Generator 的语法糖</p></li><li><p>特点：内置执行器；await 后面可以是 Promise 对象和原始类型的值；返回值是 Promise；</p></li></ul>',14)]))}const c=l(r,[["render",n],["__file","es6.html.vue"]]),h=JSON.parse('{"path":"/page/js/es6.html","title":"ES6","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1、箭头函数","slug":"_1、箭头函数","link":"#_1、箭头函数","children":[]},{"level":2,"title":"2、Proxy","slug":"_2、proxy","link":"#_2、proxy","children":[]},{"level":2,"title":"3、Reflect","slug":"_3、reflect","link":"#_3、reflect","children":[]},{"level":2,"title":"4、class","slug":"_4、class","link":"#_4、class","children":[]},{"level":2,"title":"5、Promise 对象","slug":"_5、promise-对象","link":"#_5、promise-对象","children":[]},{"level":2,"title":"6、Generator","slug":"_6、generator","link":"#_6、generator","children":[]},{"level":2,"title":"7、async/await","slug":"_7、async-await","link":"#_7、async-await","children":[]}],"git":{"updatedTime":1735209332000,"contributors":[{"name":"linwuchang","email":"linwuchang@icourt.com","commits":1}]},"filePathRelative":"page/js/es6.md"}');export{c as comp,h as data};
