import{_ as a,c as l,a as p,o as c}from"./app-D1kvnzcV.js";const i={};function t(n,e){return c(),l("div",null,e[0]||(e[0]=[p('<h1 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack"><span>webpack</span></a></h1><h2 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题"><span>面试题</span></a></h2><h3 id="webpack-的打包流程" tabindex="-1"><a class="header-anchor" href="#webpack-的打包流程"><span>webpack 的打包流程</span></a></h3><ol><li><p>初始化参数：根据 webpack.config.js 配置文件、shell 参数，确定最终参数</p></li><li><p>开始编译：根据参数，初始化 compiler 对象，加载配置参数，执行对象的 run 方法</p></li><li><p>确定入口：根据配置参数，确定所有的入口文件</p></li><li><p>编译模块：从入口文件出发，调用对应的 loader 对模块进行编译，找出模块依赖的模块，递归编译本步骤直至所有入口文件依赖的模块都被编译完成</p></li><li><p>完成模块编译：经过第 4 步，所有模块都被编译完成，得到每个模块被翻译后的最终内容，生成一个依赖图记录它们之间的依赖关系</p></li><li><p>输出资源：根据入口文件与各个模块之间的依赖关系，组装成一个个包含多个模块的 chunk，再把每个 chunk 转换成一个单独的文件加入到输出列表，可修改输出内容的最后机会</p></li><li><p>输出完成：确定输出内容，根据配置的输出路径和文件名，将输出内容写入文件系统</p></li></ol>',4)]))}const s=a(i,[["render",t],["__file","webpack.html.vue"]]),h=JSON.parse('{"path":"/page/project/webpack.html","title":"webpack","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[{"level":3,"title":"webpack 的打包流程","slug":"webpack-的打包流程","link":"#webpack-的打包流程","children":[]}]}],"git":{},"filePathRelative":"page/project/webpack.md"}');export{s as comp,h as data};
